#!/bin/bash
# .tfvars.env

# ------------------------------
# ðŸ”§ OVERRIDABLE CONFIG SECTION
# ------------------------------
# AWS_REGION: Specify the AWS region for deployment (e.g., ap-southeast-1).
# OWNER: Tag to identify the resource owner.
# ENVIRONMENT: Deployment environment (e.g., development, staging, production).
# TERRAFORM_VERSION: Version of Terraform to use; 'latest' will use the most recent version.
AWS_REGION="ap-southeast-1"   # Change this to specify Cloud Provider region, e.g. eu-west-1
OWNER="ksahu"
ENVIRONMENT="development"
TERRAFORM_VERSION="latest"

# ------------------------------
# ðŸ§  DYNAMIC VARS ASSEMBLY
# ------------------------------
# The following variables are passed to Terraform in order to execute the wrapper script.
# Adjust these variables as needed for your specific deployment.

# AWS region configuration and Tags for the PVC cluster, value for the key "owner" and "environment" are taken from above parameters.

# VPC configuration
# If create_vpc is false, the default VPC will be used. No other VPC related variables are needed.
# If create_vpc is true, the following all below listed variables are required to define.
# Availability zones must correspond to the specified AWS_REGION.

# Security group configuration
# If create_new_sg is false, existing_sg variable value must be specified.
# If create_new_sg is true, the following all below listed variables are required to define.

# Set allow_all to true to allow all traffic. This is not recommended for production. 
# If this is set to true, allowed_ports will be ignored and not required to define.
# If allow_all is set to false, allowed_ports must be defined.

# Elastic IP configuration
# If create_eip is true, cldr_eip_name variable value must be specified.
# If create_eip is false, no other EIP related variables are needed.

# Key pair configuration
# If create_keypair is false, existing_keypair_name must be specified and keypair_name is not required.
# If create_keypair is true, keypair_name is required to define.

# Instance groups configuration
# Ensure AMI IDs are valid for the specified AWS_REGION.
# The count, instance types and volume sizes are set based on the requirements of the PVC cluster.
# The tags are set to identify the instances based on the environment.
# cldr_mngr, ipa_server, pvcbase_master, pvcbase_worker, pvcecs_master, and pvcecs_worker are the instance groups.
# Each instance group has its own configuration for count, AMI, instance type, volume size, and tags.
# The count specifies the number of instances in each group.
# The AMI is the Amazon Machine Image ID to use for the instances.
# The instance type specifies the type of EC2 instance to use.
# The volume size specifies the size of the EBS volume in GB.

TF_VARS=(
    -var="aws_region=${AWS_REGION}"
    -var="pvc_cluster_tags={owner=\"${OWNER}\", environment=\"${ENVIRONMENT}\"}"

    -var="create_vpc=true"  
    -var="vpc_name=cloudera-vpc" 
    -var="vpc_cidr_block=172.16.0.0/16"
    -var='azs=["ap-southeast-1a","ap-southeast-1b"]'
    -var='public_subnets_cidr=["172.16.0.0/24"]'
    -var='private_subnets_cidr=[]'
    -var="enable_nat_gateway=false"
    -var="enable_vpn_gateway=false"

    -var="create_new_sg=true"
    -var="sg_name=pvc_cluster_sg"
    -var="existing_sg=sg-0dbb6f79cba5ef701"
    -var='allowed_cidrs=["0.0.0.0/0"]'
   
    -var='allow_all=true'
    -var='allowed_ports=[22, 443, 80, 7180, 7183, 7182]'

    -var="create_eip=true"
    -var="cldr_eip_name=cldr-mngr-eip"

    -var="create_keypair=true"
    -var="keypair_name=pvc-new-keypair1"
    -var="existing_keypair_name=kuldeep-pvc-session"

    -var='instance_groups={
    cldr_mngr = {
      count = 1
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.8xlarge"
      volume_size = 1500
      tags = { Name = "'"${ENVIRONMENT}"'-cldr-mngr" }
    },
    ipa_server = {
      count = 1
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.4xlarge"
      volume_size = 250
      tags = { Name = "'"${ENVIRONMENT}"'-ipa-server" }
    },
    pvcbase_master = {
      count = 1
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.8xlarge"
      volume_size = 1000
      tags = { Name = "'"${ENVIRONMENT}"'-pvcbase-master" }
    },
    pvcbase_worker = {
      count = 5
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.8xlarge"
      volume_size = 1000
      tags = { Name = "'"${ENVIRONMENT}"'-pvcbase-worker" }
    },
    pvcecs_master = {
      count = 1
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.8xlarge"
      volume_size = 2300
      tags = { Name = "'"${ENVIRONMENT}"'-pvcecs-master" }
    },
    pvcecs_worker = {
      count = 10
      ami = "ami-06dc977f58c8d7857"
      instance_type = "m5.8xlarge"
      volume_size = 2300
      tags = { Name = "'"${ENVIRONMENT}"'-pvcecs-worker" }
    }
  }'
)
